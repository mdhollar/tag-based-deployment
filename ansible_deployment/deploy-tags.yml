---
- name: Setup Host
  import_playbook: volttron.deployment.host_config
  vars:
    on_hosts: collectors

- name: Download Repositories
  hosts: collectors
  tasks:
    - name: Clone Normal Framework
      ansible.builtin.git:
        repo: https://github.com/normalframework/volttron-interface
        dest: volttron-interface
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ https_proxy }}"

    - name: Clone VOLTTRON PNNL Applications
      ansible.builtin.git:
        repo: https://github.com/volttron/volttron-pnnl-applications
        dest: volttron-pnnl-applications
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ https_proxy }}"

    - name: install rsync
      become: yes
      apt:
        state: present
        name:
          - rsync

    - name: Clone Config Generators
      ansible.posix.synchronize:
        src: ../config_generators
        dest: "{{ ansible_env.HOME }}"

- name: Setup VOLTTRON
  import_playbook: volttron.deployment.install_platform
  vars:
    on_hosts: collectors
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"

- name: Install dependencies for Config Generators
  hosts: collectors
  tasks:
    - name: Install psycopg2
      ansible.builtin.pip:
        name: psycopg2-binary==2.9.3
        executable: "{{ venv_for_ansible }}/bin/pip"
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ https_proxy }}"

- name: Setup Normal Framework and Driver
  hosts: collectors
  tasks:
    - name: Find Normal Framework Tarball
      ansible.builtin.find:
        paths: "{{ansible_env.HOME}}/volttron-interface/"
        patterns: "normalgw-*.tar.gz"
      register: normal_tarball
    - name: Install Normal Framework
      ansible.builtin.pip:
        name: file:///{{normal_tarball.files[0].path}}
        executable: "{{ volttron_venv }}/bin/pip"
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ https_proxy }}"

    - name: Install Normal Driver
      ansible.builtin.copy:
        remote_src: yes
        src: "{{ansible_env.HOME}}/volttron-interface/normalgw.py"
        dest: "{{ansible_env.HOME}}/volttron/services/core/PlatformDriverAgent/platform_driver/interfaces/normalgw.py"

- name: Setup Rotating Logs for VOLTTRON
  import_playbook: volttron.deployment.setup_logging
  vars:
    on_hosts: collectors
  when: use_rotating_log

- name: Make VOLTTRON a Service
  import_playbook: volttron.deployment.make_service
  when: make_volttron_service is defined and make_volttron_service | bool
  vars:
    on_hosts: collectors

- name: Create Normal Driver Configurations
  import_playbook: volttron.tag_based_deployment.driver_configs

- name: Create Airside RCx Configurations
  import_playbook: volttron.tag_based_deployment.airside_rcx_configs
  when: airside_rcx_generator is defined

- name: Create Economizer RCx Configurations
  import_playbook: volttron.tag_based_deployment.economizer_rcx_configs
  when: economizer_rcx_generator is defined

- name: Create Intelligent Load Control Configurations
  import_playbook: volttron.tag_based_deployment.ilc_configs
  when: ilc_generator is defined

- name: Start VOLTTRON
  hosts: collectors
  become: yes
  tasks:
    - name: Start VOLTTRON as Service
      ansible.builtin.systemd:
        name: volttron
        daemon_reload: yes
        enabled: yes
        state: started
      when: make_volttron_service is defined and make_volttron_service | bool

    - name: Start VOLTTRON Not as Service
      volttron.deployment.volttron_platform:
        volttron_root: "{{volttron_root}}"
        volttron_home: "{{volttron_home}}"
        state: running
    #  import_playbook: volttron.deployment.run_platforms
      when: make_volttron_service is not defined or not make_volttron_service | bool
    #  vars:
    #    on_hosts: collectors

- name: Setup Historian
  hosts: brookland
  roles:
    - volttron.deployment.set_defaults
#    - volttron.tag_based_deployment.historian_tunnel
  tasks:
    - name: Copy Historian Config
      ansible.builtin.copy:
        src: "agent_configs/{{host_configuration['agents']['platform.historian']['agent_config_store'][0]['path']}}"
        dest: "{{ host_configs_dir }}"

    - name: Install Historian Agent
      volttron.deployment.volttron_agent:
        volttron_root: "{{ volttron_root }}"
        volttron_home: "{{ volttron_home }}"
        volttron_venv: "{{ volttron_venv }}"
        agent_vip_id: "platform.historian"
        agent_spec: "{{host_configuration['agents']['platform.historian']}}"
