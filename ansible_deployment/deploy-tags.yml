---
- name: Setup Ansible Environment
  hosts: collectors
  roles:
    - volttron.deployment.set_defaults
    - volttron.deployment.ansible_venv

- name: Setup Host and Platform
  hosts: collectors
  roles:
    - volttron.deployment.system_dependencies
    - volttron.deployment.get_volttron_source
    - volttron.deployment.install_platform
    - role: volttron.deployment.setup_logging
      when: use_rotating_log
    - role: volttron.deployment.make_service
      when: make_volttron_service is defined and make_volttron_service | bool
    - volttron.tag_based_deployment.install_normal_framework_driver


- name: Setup Environment for Applications and Config Generation
  hosts: collectors
  tasks:
    - name: Clone VOLTTRON PNNL Applications
      ansible.builtin.git:
        repo: https://github.com/volttron/volttron-pnnl-applications
        dest: volttron-pnnl-applications
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ https_proxy }}"

    - name: install rsync
      become: yes
      apt:
        state: present
        name:
          - rsync

    - name: Clone Config Generators
      ansible.posix.synchronize:
        src: ../config_generators
        dest: "{{ ansible_env.HOME }}"

    - name: Install psycopg2
      ansible.builtin.pip:
        name: psycopg2-binary==2.9.3
        executable: "{{ venv_for_ansible }}/bin/pip"
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ https_proxy }}"

    - name: Install Generator Scripts
      ansible.builtin.shell:
        cmd: "{{ ansible_python_interpreter }} {{ ansible_env.HOME }}/config_generators/setup.py install"
        chdir: "{{ ansible_env.HOME }}/config_generators"

- name: Configure and Install Applications
  hosts: collectors
  vars:
    - agents_to_install: agents_to_install | default({})
  roles:
    - volttron.tag_based_deployment.suspend_volttron_and_get_state
    - role: volttron.tag_based_deployment.driver_configs
      when: driver_generator is defined
    - role: volttron.tag_based_deployment.airside_rcx_configs
      when: airside_rcx_generator is defined
    - role: volttron.tag_based_deployment.economizer_rcx_configs
      when: economizer_rcx_generator is defined
    - role: volttron.tag_based_deployment.ilc_configs
      when: ilc_generator is defined
    - volttron.tag_based_deployment.restore_volttron_state

- name: Setup Historian
  hosts: brookland
  roles:
#    - volttron.deployment.set_defaults  # Probably not needed again here?
#    - volttron.tag_based_deployment.historian_tunnel
  tasks:
    - name: Copy Historian Config
      ansible.builtin.copy:
        src: "agent_configs/{{host_configuration['agents']['platform.historian']['agent_config_store'][0]['path']}}"
        dest: "{{ host_configs_dir }}"

- name: Start VOLTTRON and Install Agents
  hosts: collectors
  vars:
    - agents_to_install: agents_to_install | default({})
  roles:
    - volttron.deployment.copy_agent_configs
    - volttron.tag_based_deployment.start_volttron_and_get_state
    - volttron.tag_based_deployment.dynamically_install_agents

